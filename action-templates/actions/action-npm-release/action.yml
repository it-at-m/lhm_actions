name: "Npm Release"

inputs:
  node-version:
    description: "node version"
    required: false
    default: "22"
  app-path:
    description: "path where the package.json is located"
    required: true
  releaseVersion:
    description: "Select version increment type (follows Semantic Versioning)"
    required: true
  npm-token:
    description: "npm token for release"
    required: true
  use-pr:
    description: "use PR for version bump instead of direct push"
    default: "false"
  skip-deployment:
    description: skip deployment to npm registry
    default: "true"

outputs:
  ARTIFACT_VERSION:
    description: version of the artifact upload
    value: ${{steps.node-release.outputs.VERSION}}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: "${{ inputs.node-version }}"
        registry-url: "https://registry.npmjs.org"
        cache: "npm"
        cache-dependency-path: "./${{inputs.app-path}}/package-lock.json"
    - id: node-release
      name: Bump version
      working-directory: ./${{inputs.app-path}}
      shell: bash
      run: |
        NEW_VERSION=$(npm version ${{inputs.releaseVersion}}) || exit 1
        echo "VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add package.json package-lock.json
        git commit -m "chore(${{ inputs.app-path }}): bump version to ${NEW_VERSION}" || exit 1

    - name: Install dependencies
      run: npm --prefix ./${{inputs.app-path}} ci
      shell: bash
    - name: Run build
      run: npm run --prefix ./${{inputs.app-path}} build
      shell: bash
    - name: Push to NPM registry
      if: ${{ inputs.skip-deployment != "true" }}
      shell: bash
      working-directory: ./${{ inputs.app-path }}
      run: npm --prefix ./${{ inputs.app-path }} publish --provenance --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Centralized token in it-at-m GitHub organization

    - id: artifact-name
      run: echo "artifact-name=${{hashFiles(format('./{0}/package.json', inputs.app-path))}}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Upload Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{steps.artifact-name.outputs.artifact-name}}
        path: "**/dist"
        retention-days: 5

    - name: Push changes
      if: ${{ inputs.use-pr != 'true' }}
      shell: bash
      run: git push || exit 1

    - name: Push changes to release branch and create pull request
      if: ${{ inputs.use-pr == 'true' }}
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
      with:
        title: "chore(${{ inputs.app-path }}): bump release version to ${{ env.NEW_VERSION }}"
        branch: "release-${{ inputs.app-path }}-${{ env.NEW_VERSION }}"
        base: "${{ github.ref_name }}"
        body: "This PR is auto-generated"
        assignees: "${{ github.actor }}"
