name: Maven Release

inputs:
  java-version:
    required: false
    default: 21
    type: string
    description: configure the java version
  app-path:
    required: true
    type: string
    description: path where the pom.xml is
  releaseVersion:
    required: true
    type: string
    description: version which will be released
  developmentVersion:
    required: true
    type: string
    description: next version with snapshot
  skipDeployment:
    default: true
    type: boolean
    description: skip deployment to maven central
  use-pr:
    default: false
    type: boolean
    description: use PR for version bump instead of direct push
  SIGN_KEY_PASS:
    required: true
    type: string
    description: env variable for GPG private key passphrase
  CENTRAL_USERNAME:
    required: true
    type: string
    description: env variable for username in deploy
  CENTRAL_PASSWORD:
    required: true
    type: string
    description: env variable for token in deploy
  GPG_PRIVATE_KEY:
    required: true
    type: string
    description: Value of the GPG private key to import

outputs:
  MVN_ARTIFACT_ID:
    description: "artifact name from pom"
    value: ${{ steps.maven-release-step.outputs.MVN_ARTIFACT_ID }}
  artifact-name:
    description: "name of the artifact upload"
    value: ${{steps.artifact-name.outputs.artifact-name}}

runs:
  using: "composite"
  steps:
    # Checkout source code, set up Java, etc. Then...
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: ${{ inputs.java-version }}
        distribution: "temurin"
        cache: "maven"
        cache-dependency-path: "./${{ inputs.app-path}}/pom.xml"
        server-id: "central"
        server-username: ${{ inputs.CENTRAL_USERNAME }}
        server-password: ${{ inputs.CENTRAL_PASSWORD }}
        gpg-private-key: ${{ inputs.GPG_PRIVATE_KEY }}
        gpg-passphrase: ${{ inputs.SIGN_KEY_PASS }}
    - name: Maven Release Step
      id: maven-release-step
      shell: bash
      run: |
        # configure git
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        # get maven artifact id and provide as output
        MVN_ARTIFACT_ID=$(mvn -f ./${{inputs.app-path}}/pom.xml org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo $MVN_ARTIFACT_ID
        echo "MVN_ARTIFACT_ID=$MVN_ARTIFACT_ID" >> $GITHUB_OUTPUT
        # prepare the maven arguments
        MAVEN_ARGS="-DpushChanges=${{ inputs.use-pr != 'true' }} -DremoteTagging=false -DlocalCheckout=true"
        # set maven deploy skip if skipDeployment is true
        if [[ "${{ inputs.skipDeployment }}" == "true" ]]; then
          MAVEN_ARGS="$MAVEN_ARGS -Darguments='-Dmaven.deploy.skip=true'"
        fi
        # run maven release
        mvn release:prepare release:perform -f ./${{inputs.app-path}}/pom.xml -B \
          -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} \
          $MAVEN_ARGS
      env:
        SIGN_KEY_PASS: ${{ inputs.SIGN_KEY_PASS }}
        CENTRAL_USERNAME: ${{ inputs.CENTRAL_USERNAME }}
        CENTRAL_PASSWORD: ${{ inputs.CENTRAL_PASSWORD }}

    - id: artifact-name
      run: echo "artifact-name=${{hashFiles(format('./{0}/pom.xml', inputs.app-path))}}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: "Upload Artifact"
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{steps.artifact-name.outputs.artifact-name}}
        path: "**/target"
        retention-days: 5

    - name: Push changes to release branch and create pull request
      if: ${{ inputs.use-pr == 'true' }}
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
      with:
        title: "chore(${{ inputs.app-path }}): bump release version to ${{ inputs.releaseVersion }}"
        branch: "release-${{ inputs.app-path }}-${{ inputs.releaseVersion }}"
        base: "${{ github.ref_name }}"
        body: "This PR is auto-generated"
        assignees: "${{ github.actor }}"
