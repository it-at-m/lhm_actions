name: Maven Release

inputs:
  java-version:
    required: false
    default: 21
    type: string
    description: "Configure java version"
  app-path:
    required: true
    type: string
    description: "Path to pom.xml"
  release-version:
    required: true
    type: string
    description: "Version which will be released"
  development-version:
    required: true
    type: string
    description: "Next snapshot version"
  skip-deployment:
    default: true
    type: boolean
    description: "Skip deployment to Maven Central"
  SIGN_KEY_PASS:
    required: true
    type: string
    description: "GPG private key passphrase"
  CENTRAL_USERNAME:
    required: true
    type: string
    description: "Maven Central username"
  CENTRAL_PASSWORD:
    required: true
    type: string
    description: "Maven Central token"
  GPG_PRIVATE_KEY:
    required: true
    type: string
    description: "GPG private key to import"

outputs:
  MVN_ARTIFACT_ID:
    description: "Artifact name from pom"
    value: ${{ steps.maven-release-step.outputs.MVN_ARTIFACT_ID }}
  artifact-name:
    description: "Name of the artifact upload"
    value: ${{steps.artifact-name.outputs.artifact-name}}

runs:
  using: "composite"
  steps:
    # Checkout source code, set up Java, etc. Then...
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: ${{ inputs.java-version }}
        distribution: "temurin"
        cache: "maven"
        cache-dependency-path: "./${{ inputs.app-path}}/pom.xml"
        server-id: "central"
        server-username: ${{ inputs.CENTRAL_USERNAME }}
        server-password: ${{ inputs.CENTRAL_PASSWORD }}
        gpg-private-key: ${{ inputs.GPG_PRIVATE_KEY }}
        gpg-passphrase: ${{ inputs.SIGN_KEY_PASS }}
    - name: Maven release step
      id: maven-release-step
      shell: bash
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        MVN_ARTIFACT_ID=$(mvn -f .${{inputs.app-path}}/pom.xml org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo $MVN_ARTIFACT_ID
        echo "MVN_ARTIFACT_ID=$MVN_ARTIFACT_ID" >> $GITHUB_OUTPUT
        mvn release:prepare release:perform -f ./${{inputs.app-path}}/pom.xml -B -DreleaseVersion=${{ inputs.release-version }} -DdevelopmentVersion=${{ inputs.development-version }} -Darguments="-Dmaven.deploy.skip=${{ inputs.skip-deployment }}"
      env:
        SIGN_KEY_PASS: ${{ inputs.SIGN_KEY_PASS}}
        CENTRAL_USERNAME: ${{ inputs.CENTRAL_USERNAME }}
        CENTRAL_PASSWORD: ${{ inputs.CENTRAL_PASSWORD }}

    - id: artifact-name
      name: Set output variable $GITHUB_OUTPUT
      run: echo "artifact-name=${{hashFiles(format('./{0}/pom.xml', inputs.app-path))}}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Upload artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{steps.artifact-name.outputs.artifact-name}}
        path: "**/target"
        retention-days: 5
