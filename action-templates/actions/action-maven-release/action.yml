name: "Maven release"
description: "Creates a Maven release pull request"

inputs:
  java-version:
    description: "Java version to use for the build"
    required: false
    default: "21"
  app-path:
    description: "Path to the projectâ€™s pom.xml file"
    required: true
  releaseVersion:
    description: "Version to be released"
    required: true
  developmentVersion:
    description: "Next version with snapshot"
    required: true
  skipDeployment:
    description: "Skip deployment to Maven Central"
    default: "true"
  use-pr:
    description: "Use PR for version bump instead of direct push"
    default: "false"
  GPG_PRIVATE_KEY:
    description: "GPG private key to import"
    required: true
  SIGN_KEY_PASS:
    description: "Environment variable name for the GPG private key passphrase"
    required: true
  CENTRAL_USERNAME:
    description: "Environment variable name for the username for authentication to Maven Central"
    required: true
  CENTRAL_PASSWORD:
    description: "Environment variable name for password or token for authentication to Maven Central"
    required: true

outputs:
  MVN_ARTIFACT_ID:
    description: "Artifact name from pom"
    value: ${{ steps.maven-release-step.outputs.MVN_ARTIFACT_ID }}
  artifact-name:
    description: "Name of the artifact upload"
    value: ${{steps.artifact-name.outputs.artifact-name}}

runs:
  using: "composite"
  steps:
    # Checkout source code, set up Java, etc. Then...
    - name: Checkout repository
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: ${{ inputs.java-version }}
        distribution: "temurin"
        cache: "maven"
        cache-dependency-path: "./${{ inputs.app-path}}/pom.xml"
        server-id: "central"
        server-username: CENTRAL_USERNAME
        server-password: CENTRAL_PASSWORD
        gpg-private-key: ${{ inputs.GPG_PRIVATE_KEY }}
        gpg-passphrase: SIGN_KEY_PASS
    - name: Maven release step
      id: maven-release-step
      shell: bash
      run: |
        # configure git
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        # get maven artifact id and provide as output
        MVN_ARTIFACT_ID=$(mvn -f ./${{inputs.app-path}}/pom.xml org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo $MVN_ARTIFACT_ID
        echo "MVN_ARTIFACT_ID=$MVN_ARTIFACT_ID" >> $GITHUB_OUTPUT
        # prepare the maven arguments
        MAVEN_ARGS="-DpushChanges=${{ inputs.use-pr != 'true' }} -DremoteTagging=false -DlocalCheckout=true"
        # set maven deploy skip if skipDeployment is true
        if [[ "${{ inputs.skipDeployment }}" == "true" ]]; then
          MAVEN_ARGS="$MAVEN_ARGS -Darguments='-Dmaven.deploy.skip=true'"
        fi
        # run maven release
        mvn release:prepare release:perform -f ./${{inputs.app-path}}/pom.xml -B \
          -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} \
          $MAVEN_ARGS
      env:
        SIGN_KEY_PASS: ${{ inputs.SIGN_KEY_PASS }}
        CENTRAL_USERNAME: ${{ inputs.CENTRAL_USERNAME }}
        CENTRAL_PASSWORD: ${{ inputs.CENTRAL_PASSWORD }}

    - id: artifact-name
      name: Set output variable $GITHUB_OUTPUT
      run: echo "artifact-name=${{hashFiles(format('./{0}/pom.xml', inputs.app-path))}}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Upload artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{steps.artifact-name.outputs.artifact-name}}
        path: "**/target"
        retention-days: 5

    - name: Push changes to release branch and create pull request
      if: ${{ inputs.use-pr == 'true' }}
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
      with:
        title: "chore(${{ inputs.app-path }}): bump release version to ${{ inputs.developmentVersion }}"
        branch: "release-${{ inputs.app-path }}-${{ inputs.developmentVersion }}"
        base: "${{ github.ref_name }}"
        body: "This PR is auto-generated"
        assignees: "${{ github.actor }}"
